<UserControl
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:Neith.Signpost"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" xmlns:ee="http://schemas.microsoft.com/expression/2010/effects" xmlns:Neith_Signpost_Converters="clr-namespace:Neith.Signpost.Converters" x:Name="userControl"
    mc:Ignorable="d"
    x:Class="Neith.Signpost.CountDownTimer"
    d:DesignWidth="116" d:DesignHeight="38">
    <UserControl.Resources>
    	<Neith_Signpost_Converters:StringFormatConverter x:Key="StringFormatConverter"/>
    	<Neith_Signpost_Converters:ToVisibilityConverter x:Key="ToVisibilityConverter"/>
    	<Style TargetType="{x:Type TextBlock}">
    		<Setter Property="FontFamily" Value="Segoe UI" />
    		<Setter Property="Foreground" Value="#FFAAAAAA" />
    	</Style>
    	<local:CountDownTimerViewModel x:Key="CountDownTimerViewModelDataSource" />
    	<Storyboard x:Key="OnLoaded1"/>
    </UserControl.Resources>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="MouseLeftButtonDown" SourceName="imgReset">
            <ei:GoToStateAction TargetObject="{Binding ElementName=userControl}" StateName="ResetPress"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="MouseLeftButtonUp" SourceName="imgReset">
            <ei:GoToStateAction TargetObject="{Binding ElementName=userControl}" StateName="ResetNormal"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="MouseLeftButtonDown" SourceName="cntArea">
        	<ei:GoToStateAction TargetObject="{Binding ElementName=userControl}" StateName="CountRress"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="MouseLeftButtonUp" SourceName="cntArea">
        	<ei:GoToStateAction TargetObject="{Binding ElementName=userControl}" StateName="CountNormal"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid x:Name="LayoutRoot" DataContext="{Binding Source={StaticResource CountDownTimerViewModelDataSource}}">
    	<i:Interaction.Triggers>
    		<ei:PropertyChangedTrigger Binding="{Binding StatusText, Mode=OneWay}">
    			<ei:GoToStateAction StateName="{Binding StatusText, Mode=OneWay}"/>
    		</ei:PropertyChangedTrigger>
    	</i:Interaction.Triggers>
    	<VisualStateManager.CustomVisualStateManager>
    		<ei:ExtendedVisualStateManager/>
    	</VisualStateManager.CustomVisualStateManager>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="TimerStatus">
                <VisualState x:Name="TimerReset"/>
                <VisualState x:Name="TimerRun">
                	<Storyboard>
                		<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="tbMinute">
                			<EasingColorKeyFrame KeyTime="0" Value="White"/>
                		</ColorAnimationUsingKeyFrames>
                		<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="tbSpan">
                			<EasingColorKeyFrame KeyTime="0" Value="White"/>
                		</ColorAnimationUsingKeyFrames>
                		<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="tbSecond">
                			<EasingColorKeyFrame KeyTime="0" Value="White"/>
                		</ColorAnimationUsingKeyFrames>
                		<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="tbMark">
                			<EasingColorKeyFrame KeyTime="0" Value="White"/>
                		</ColorAnimationUsingKeyFrames>
                	</Storyboard>
                </VisualState>
                <VisualState x:Name="TimerPause"/>
                <VisualState x:Name="TimerFin">
                	<Storyboard>
                		<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="tbMinute">
                			<EasingColorKeyFrame KeyTime="0" Value="#FFFF9337"/>
                		</ColorAnimationUsingKeyFrames>
                		<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="tbSpan">
                			<EasingColorKeyFrame KeyTime="0" Value="#FFFF9337"/>
                		</ColorAnimationUsingKeyFrames>
                		<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="tbSecond">
                			<EasingColorKeyFrame KeyTime="0" Value="#FFFF9337"/>
                		</ColorAnimationUsingKeyFrames>
                		<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="tbMark">
                			<EasingColorKeyFrame KeyTime="0" Value="#FFFF9337"/>
                		</ColorAnimationUsingKeyFrames>
                	</Storyboard>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="ResetButtonStatus">
                <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="0:0:0.15">
                		<VisualTransition.GeneratedEasingFunction>
                			<BackEase EasingMode="EaseOut" Amplitude="2"/>
                		</VisualTransition.GeneratedEasingFunction>
                	</VisualTransition>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="ResetNormal"/>
                <VisualState x:Name="ResetPress">
                	<Storyboard>
                		<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="imgReset">
                			<EasingDoubleKeyFrame KeyTime="0" Value="2"/>
                		</DoubleAnimationUsingKeyFrames>
                		<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="imgReset">
                			<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                		</DoubleAnimationUsingKeyFrames>
                	</Storyboard>
                </VisualState>
            </VisualStateGroup>
        	<VisualStateGroup x:Name="CountAreaStatus">
        		<VisualStateGroup.Transitions>
        			<VisualTransition GeneratedDuration="0:0:0.1">
        				<VisualTransition.GeneratedEasingFunction>
        					<BackEase EasingMode="EaseOut" Amplitude="2"/>
        				</VisualTransition.GeneratedEasingFunction>
        			</VisualTransition>
        		</VisualStateGroup.Transitions>
        		<VisualState x:Name="CountNormal"/>
        		<VisualState x:Name="CountRress">
        			<Storyboard>
        				<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="cntArea">
        					<EasingDoubleKeyFrame KeyTime="0" Value="2"/>
        				</DoubleAnimationUsingKeyFrames>
        				<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="cntArea">
        					<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
        				</DoubleAnimationUsingKeyFrames>
        			</Storyboard>
        		</VisualState>
        	</VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    <StackPanel Orientation="Horizontal">
        <Viewbox x:Name="cntArea" HorizontalAlignment="Right" Margin="4,0" RenderTransformOrigin="0.5,0.5" MouseDown="viewbox_MouseDown">
        	<Viewbox.RenderTransform>
        		<TransformGroup>
        			<ScaleTransform/>
        			<SkewTransform/>
        			<RotateTransform/>
        			<TranslateTransform/>
        		</TransformGroup>
        	</Viewbox.RenderTransform>
            <StackPanel Orientation="Horizontal">
                <TextBlock x:Name="tbMinute" Text="{Binding Minute, ConverterParameter=00, Converter={StaticResource StringFormatConverter}, Mode=OneWay}"/>
                <TextBlock x:Name="tbSpan" Text=":"/>
                <TextBlock x:Name="tbSecond" Text="{Binding Second, ConverterParameter=00, Converter={StaticResource StringFormatConverter}, Mode=OneWay}"/>
                <TextBlock x:Name="tbMark" Text="." Visibility="{Binding Mark, Converter={StaticResource ToVisibilityConverter}, Mode=OneWay}"/>
            </StackPanel>
        </Viewbox>
        <Grid x:Name="imgReset" Width="26" Height="26" Margin="3,2,0,0" RenderTransformOrigin="0.5,0.5" MouseDown="imgReset_MouseDown">
        	<Grid.RenderTransform>
        		<TransformGroup>
        			<ScaleTransform/>
        			<SkewTransform/>
        			<RotateTransform/>
        			<TranslateTransform/>
        		</TransformGroup>
        	</Grid.RenderTransform>
          <Image Source="/Neith.Signpost;component/Images/player_rewind.png" Stretch="Fill" />
        </Grid>
    
    </StackPanel>
    </Grid>
</UserControl>
