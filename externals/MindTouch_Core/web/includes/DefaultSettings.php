<?php
/*
 * MindTouch Deki - enterprise collaboration and integration platform
 *  derived from MediaWiki (www.mediawiki.org)
 * Copyright (C) 2006-2009 MindTouch, Inc.
 * www.mindtouch.com  oss@mindtouch.com
 *
 * For community documentation and downloads visit www.opengarden.org;
 * please review the licensing section.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 * http://www.gnu.org/copyleft/gpl.html
 */

/**
 * DO NOT EDIT THIS FILE!
 *
 * To customize your installation, edit "LocalSettings.php".
 *
 * Note that since all these string interpolations are expanded
 * before LocalSettings is included, if you localize something
 * like $wgScriptPath, you must also localize everything that
 * depends on it.
 *
 * @package MediaWiki
 */

// entry point check
if ( !defined( 'MINDTOUCH_DEKI') && !defined('MEDIAWIKI') ) :
	die('MINDTOUCH_DEKI not defined, this is not a valid entry point');
endif;

/**
 * Name of the site.
 * It must be changed in LocalSettings.php
 * @global string $wgSitename
 */
$wgSitename         = 'MindTouch';
$wgHostedVersion	= false;

$wgSitenameLength	= 64; //the limit of how long a sitename can be

/**
 * Defines the product information
 *
 * @global string $wgProductName
 * @global string $wgProductVersion
 */
$wgProductVersion			= '10.0.1';
$wgProductTrialUrl  		= 'http://trial.mindtouch.com';
$wgIsVM 					= false; //overriden in config/vm.php

/**
 * URL of the server
 * It will be automaticly build including https mode
 * @global string $wgServer
 */
$wgServer = '';

if (isset($_SERVER['SERVER_NAME']))
{
	$wgServerName = $_SERVER['SERVER_NAME'];
}
else if (isset($_SERVER['HOSTNAME']))
{
	$wgServerName = $_SERVER['HOSTNAME'];
}
else
{
	// FIXME: Fall back on... something else?
	$wgServerName = 'localhost';
}

// check if the server uses https
$wgProto = isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] == 'on' ? 'https' : 'http';

$wgServer = $wgProto.'://' . $wgServerName;
if( isset( $_SERVER['SERVER_PORT'] ) && (($wgProto == 'http' && $_SERVER['SERVER_PORT'] != 80) || ($wgProto == 'https' && $_SERVER['SERVER_PORT'] != 443))) {
	$wgServer .= ":" . $_SERVER['SERVER_PORT'];
}
/*
 * Paths should be absolute urls from the site root
 */
$wgControlPanelPath = '/deki/cp';
$wgDekiPluginPath = '/deki/plugins';

/**
 * The path we should point to.
 * It might be a virtual path in case with use apache mod_rewrite for example
 * @global string $wgScriptPath
 */
$wgScriptPath	    = '';

/**
 * Whether to support URLs like index.php/Page_title
 * @global bool $wgUsePathInfo
 */
$wgUsePathInfo		= ( strpos( php_sapi_name(), 'cgi' ) === false );


/**#@+
 * Script users will request to get articles
 * ATTN: Old installations used wiki.phtml and redirect.phtml -
 * make sure that LocalSettings.php is correctly set!
 * @deprecated
 */
/**
 *	@global string $wgScript
 */
$wgScript           = "{$wgScriptPath}/index.php";
/**#@-*/


/**#@+
 * @global string
 */
/**
 * style path as seen by users
 * @global string $wgStylePath
 */
$wgStylePath   = "{$wgScriptPath}/skins";
/**
 * filesystem stylesheets directory
 * @global string $wgStyleDirectory
 */
$wgStyleDirectory = "{$IP}/skins";
$wgResourcesDirectory = "{$IP}/resources";
$wgStyleSheetPath = &$wgStylePath;
$wgStyleSheetDirectory = &$wgStyleDirectory;
$wgArticlePath      = "{$wgScriptPath}/$1";
$wgUploadPath       = "{$wgScriptPath}/upload";
$wgUploadDirectory	= "{$IP}/upload";
$wgHashedUploadDirectory	= true;
$wgLogoDefault		= "/common/logo/logo.png"; //separated from $wgLogo so we know what the "default" logos are since $wgLogo gets overwritten
$wgLogo				= "{$wgStylePath}".$wgLogoDefault;
$wgTmpDirectory     = "{$wgUploadDirectory}/tmp";
$wgUploadBaseUrl    = "";
$wgCacheDirectory 	= $IP.'/skins/common/cache';
$wgCachePath	 	= '/skins/common/cache';
// custom css
$wgLocalCssPath		= $wgStylePath.'/common/custom_css.php';
/**#@-*/

$wgOverrideReadOnlyNamespaces = false;

# Email settings
#

/**
 * Password reminder email address
 * The address we should use as sender when a user is requesting his password
 * Default to apache@SERVER_NAME
 * @global string $wgPasswordSender
 */
$wgPasswordSender	= 'MindTouch <apache@' . $wgServerName . '>';

/**
 * Set to true to enable the e-mail basic features:
 * Password reminders, etc. If sending e-mail on your
 * server doesn't work, you might want to disable this.
 * @global bool $wgEnableEmail
 */
$wgEnableEmail = true;

/**
 * Set to true to enable user-to-user e-mail.
 * This can potentially be abused, as it's hard to track.
 * @global bool $wgEnableUserEmail
 */
$wgEnableUserEmail = false;

/**
 * SMTP Mode
 * For using a direct (authenticated) SMTP server connection.
 * Default to false or fill an array :
 * <code>
 * "host" => 'SMTP domain',
 * "IDHost" => 'domain for MessageID',
 * "port" => "25",
 * "auth" => true/false,
 * "username" => user,
 * "password" => password
 * </code>
 *
 * @global mixed $wgSMTP
 */
$wgSMTP				= false;

/**#@+
 * Database settings
 */
/** database host name or ip address */
$wgDBserver         = 'localhost';

/** database port */
$wgDBport           = 3306;

/** name of the database */
$wgDBname           = 'wikidb';
/** */
$wgDBconnection     = '';
/** Database username */
$wgDBuser           = 'wikiuser';
/** Database type
 * "mysql" for working code and "PostgreSQL" for development/broken code
 */
$wgDBtype           = "mysql";
/** Search type
 * "MyISAM" for MySQL native full text search, "Tsearch2" for PostgreSQL
 * based search engine
 */
/** Table name prefix */
$wgDBprefix         = '';
/** Database schema
 * on some databases this allows separate
 * logical namespace for application data
 */
$wgDBschema	    = 'mediawiki';
/**#@-*/


# Sysop SQL queries
#   The sql user shouldn't have too many rights other the database, restrict
#   it to SELECT only on 'cur' table for example
#
$wgDBsqluser		= 'sqluser';
$wgDBsqlpassword	= 'sqlpass';
$wgDBpassword       = 'userpass';
$wgSqlLogFile           = "{$wgUploadDirectory}/sqllog_mFhyRe6";
$wgDBerrorLog		= false; # File to log MySQL errors to

$wgSqlTimeout		= 30;

# Language settings
#
/**
 * Site language code
 * Default to 'en'. Should be one of ./language/Language(.*).php
 * @global string $wgLanguageCode
 */
$wgLanguageCode     = 'en';

$wgInputEncoding	= 'UTF-8'; # LanguageUtf8.php normally overrides this
$wgOutputEncoding	= 'UTF-8'; # unless you set the next option to true:

$wgMimeType			= 'text/html';
$wgDocType			= '-//W3C//DTD XHTML 1.0 Transitional//EN';
$wgDTD				= 'http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd';

# The debug log file should be not be publicly accessible if it is
# used, as it may contain private data.
$wgDebugLogFile         = '';

/**#@+
 * @global bool
 */
$wgDebugRedirects		= false;
$wgDebugRawPage         = false; # Avoid overlapping debug entries by leaving out CSS

$wgDebugComments        = false;
$wgReadOnly             = false;
$wgLogQueries           = false;
$wgDebugDumpSql         = false;

# Whether to show "we're sorry, but there has been a database error" pages.
# Displaying errors aids in debugging, but may display information useful
# to an attacker.
$wgShowSQLErrors        = false;

# Namespaces which are not editable
$wgBlockedNamespaces = array(NS_ADMIN, NS_ATTACHMENT);

/***
 * Custom localized namespaces; map any string to any namespace below
 */
$wgCanonicalAlternateNamespaces = array();


# Set this to current time to invalidate all prior cached pages.
# Affects both client- and server-side caching.
$wgCacheEpoch = '20030516000000';

# When using the file cache, we can store the cached HTML gzipped to save disk
# space. Pages will then also be served compressed to clients that support it.
# THIS IS NOT COMPATIBLE with ob_gzhandler which is now enabled if supported in
# the default LocalSettings.php! If you enable this, remove that setting first.
#
# Requires zlib support enabled in PHP.
$wgUseGzip = false;
$wgUseGzDisplay = true;
$wgDisabledGzip = false;

$wgCookieExpiration = 604800;

# Clock skew or the one-second resolution of time() can occasionally cause cache
# problems when the user requests two pages within a short period of time. This
# variable adds a given number of seconds to vulnerable timestamps, thereby giving
# a grace period.
$wgClockSkewFudge = 5;

# $wgInternalServer = 'http://yourinternal.tld:8000';
 $wgInternalServer = $wgServer;

# Cookie settings:
#   Set to set an explicit domain on the login cookies
#   eg, "justthis.domain.org" or ".any.subdomain.net"
$wgCookieDomain = '';
$wgCookiePath = '/';
$wgCookieSecure = null;
$wgCookieHttpOnly = true;

# Profiling / debugging
$wgProfiling = false; # Enable for more detailed by-function times in debug log
$wgProfileLimit = 0.0; # Only record profiling info for pages that took longer than this
$wgProfileOnly = false; # Don't put non-profiling info into log file
$wgProfileToDatabase = false; # Log sums from profiling into "profiling" table in db.
$wgProfileSampleRate = 1; # Only profile every n requests when profiling is turned on
$wgProfileCallTree = false; # If true, print a raw call tree instead of per-function report
$wgProfileToCommentUser = false; # Put profiling data in HTML comments in the output file, for a given user only

$wgDebugProfiling = false; # Detects non-matching wfProfileIn/wfProfileOut calls
$wgDebugFunctionEntry = 0; # Output debug message on every wfProfileIn/wfProfileOut
$wgProfileApi = false;

$wgDisableCounters = false;

# This is a list of extensions for which we have special file icons
$wgStyledExtensions = array(
	'jpg', 'jpeg', 'jpe', 'gif', 'png', 'sh', 'txt', 'doc', 'zip', 'pdf', 
	'xls', 'csv', 'xlsx', 'xlsm', 'xltx', 'xltm', 'xlsb', 'xlam', 
	'ppt', 'pps', 'pptx', 'pptm', 'potx', 'potm', 'ppam', 'ppsx', 'ppsm', 
	'doc', 'rtf', 'txt', 'docx', 'docm', 'dotx', 'dotm',
	'fla', 'swf', 'tar', 'rar', 'gzip', 'html', 'htm', 'shtml',
	'wmv', 'avi', 'mov', 'mpg', 'mp4', 'mpeg'
);

//files with these file extensions will show up in the image gallery; if no extension is set, will check mimetype for image/*
$wgImageExtensions = array('png', 'gif', 'jpg', 'jpeg', 'jpe', 'bmp');
$wgWriteViewer = array('doc', 'rtf', 'docx', 'docm', 'dotx', 'dotm');
$wgCalcViewer = array('xls', 'xlsx', 'xlsm', 'xltx', 'xltm', 'xlsb', 'xlam');
$wgShowViewer = array('ppt', 'pps', 'pptx', 'pptm', 'potx', 'potm', 'ppam', 'ppsx', 'ppsm');

// see bug 5891; these are IE-specific extensions which can trigger an activex control to edit inline
$wgWebDavExtensions = array_merge($wgWriteViewer, $wgCalcViewer, $wgShowViewer); 

## Resizing can be done using PHP's internal image libraries
## or using ImageMagick. The later supports more file formats
## than PHP, which only supports PNG, GIF, JPG, XBM and WBMP.
##
## Set $wgUseImageMagick to true to use Image Magick instead
## of the builtin functions
#
if (DIRECTORY_SEPARATOR == '/') {
	$wgImageMagickConvertCommand    = '/usr/bin/convert';
} else {
	# put 'imagemagick-6.2.9-q16' into you PATH
	$wgImageMagickConvertCommand    = 'convert.exe';
}

if( !isset( $wgCommandLineMode ) ) {
	$wgCommandLineMode = false;
}

# Recentchanges items are periodically purged;
# entries older than this many seconds will go.
$wgRCMaxAge = 7 * 24 * 3600; # our one week cutoff

//active skin/theme
$wgActiveTemplate = $wgDefaultTemplate = 'deuce';
$wgActiveSkin = $wgDefaultSkin = 'lighty-blue';

# These are custom overrides for template variables
$wgTemplateOverrides = array();


# Whether or not to allow real name fields. Defaults to true.
$wgAllowRealName = true;

$wgExtensionFunctions = array();

/**
 * Deki Plugins
 * @note Deki's plugins are not currently compatible with mediawiki plugins.
 * Also note that these plugins settings are only applicable when $wgDekiPluginMode = 'safe'.
 */
// @type enum {'safe', 'directory'} default: 'safe'
$wgDekiPluginMode = 'safe';
/**
 * Determines which internal plugins to load 
 */
$wgDefaultDekiPlugins = array(
	'files_table',
	'image_gallery_lite',
	'nav_pane',
	'page_tags',
	'page_template_selector',
	'param_switches',
	'sitemap',
	'special_page',
	'special_search',
	'user_dashboard',
	'page_content_rating',
	'page_title_editor',
	'tooltips'
);
/**
 * User defined list of additional plugins to load
 */
$wgDekiPlugins = array();
/**
 * Determines which internal special page plugins to load
 */
$wgDefaultDekiSpecialPages = array(
	'special_about',
	'special_admin',
	'special_article',
	'special_contributions',
	'special_events',
	'special_listrss',
	'special_listtemplates',
	'special_listusers',
	'special_package',
	'special_pagealerts',
	'special_pageemail',
	'special_pageproperties',
	'special_pagerestrictions',
	'special_popularpages',
	'special_recentchanges',
	'special_sitemap',
	'special_specialpages',
	'special_tags',
	'special_userban',
	'special_userlogin',
	'special_userlogout',
	'special_userpassword',
	'special_userpreferences',
	'special_userregistration',
	'special_watchedpages',
	'special_watchlist'
);
/**
 * User defined list of additional special page plugins to load
 */
$wgDekiSpecialPages = array();

/**
 * Determines which internal dashboard plugins to load 
 */
$wgDefaultDekiUserDashboardPlugins = array(
	'user_page'
);

/**
 * User defined list of plugins to stop from loading. Useful for hiding/disabling
 * certain functionality or streamlining the PHP plugin loads.
 * 
 * @see $wgDefaultDekiPlugins, $wgDefaultDekiSpecialPages
 */
$wgDisabledDekiPlugins = array();
/**
 * /Deki Plugins
 */


# Set maximum number of results to return in syndication feeds
# (RSS, Atom) for eg Recentchanges, Newpages.
$wgFeedLimit = 50;

# _Minimum_ timeout for cached Recentchanges feed, in seconds.
# A cached version will continue to be served out even if changes
# are made, until this many seconds runs out since the last render.
$wgFeedCacheTimeout = 60;

/** Navigation links for the user sidebar.
 * 'text' is the name of the MediaWiki message that contains the label of this link
 * 'href' is the name of the MediaWiki message that contains the link target of this link.
 *        Link targets starting with http are considered remote links. Ones not starting with
 *        http are considered as names of local wiki pages.
 */
$wgNavigationLinks = array();

# If a user does not set his or her own timezone, this will set the default timezone
$wgDefaultTimezone = '+00:00'; //example format: -05:00, 05:00

# Timezones that don't fall on the hour; there are a lot of smaller random ones, so we'll keep them in this special list
$wgCustomTimezones = array('-09:30', '-08:30', '-03:30', '+03:30', '+04:30', '+05:30', '+05:45', '+06:30', '+09:30', '+10:30', '+11:30');

/**
 * Global list of hooks.
 * Add a hook by doing:
 *     $wgHooks['event_name'][] = $function;
 * or:
 *     $wgHooks['event_name'][] = array($function, $data);
 * or:
 *     $wgHooks['event_name'][] = array($object, 'method');
 */

$wgHooks = array();

/**
 * Lucene search settings
 */
$wgDisableTextSearch = false;

// comment?
$wgCustomerLogo = false;

// Plug Default Configuration
/**
 * Base uri for the Dream server
 */
$wgDreamServer = 'http://localhost:8081';
/**
 * Sets the dream.in.host request param
 *
 * @note useful for multi-tenant installations
 * @var string
 */
$wgDreamHost = isset($_SERVER['HTTP_HOST']) ? $_SERVER['HTTP_HOST'] : null;
/**
 * Base path for the Dream server
 * If access to the Dream server is proxied then set this to
 * the proxy's path. Most installations will not need to set this.
 * 
 * @example $wgDreamServer = 'http://mydeki';
 * 			$wgDreamApi = '@api'; // result: http://mydeki/@api
 */
$wgDreamApi = '';
$wgApi = '@api';
$wgDeki = 'deki';

/**
 * Base path for the Deki service
 * Currently this has to be the full path to the Deki api after
 * appending to $wgDreamServer. Ideally we would build the uri like
 * $wgDreamServer . $wgDreamApi . $wgDekiApi
 */
$wgDekiApi = $wgDeki;
// /Plug Default Configuration

/**
 * Open/close public registration
 */
$wgAnonAccCreate = true;
$wgAnonView = true; //only used for hosted deki wiki

/**
 * Navigation Pane Width
 */
$wgNavPaneEnabled = true;
$wgNavPaneCallEnabled = true;
$wgNavPaneWidth = 1600;

// can't move this, because it's also set through the site/settings
$wgHelpUrl = 'http://developer.mindtouch.com/en/docs/MindTouch/User_Manual';
$wgDefaultAnalytics = 'UA-68075-16'; // these values are inserted into the database on install

/***
 * URL of RSS feed for getting the latest MindTouch Deki news. 
 * Set this to null in LocalSettings.php to suppress this behavior.
 */
$wgRssUrl = 'http://feeds.feedburner.com/mindtouch/updates'; 
$wgVideoRssUrl = 'http://www.viddler.com/explore/MindTouch/videos/feed/';

/***
 * URL that is used to ping to see if updates are available for MindTouch Deki. 
 * Set this value to null in LocalSettings.php to suppress this behavior. 
 * A salted hash of your IP address will be stored so we have an idea on distribution of different MindTouch Deki versions in the wild. 
 */
$wgVersionPingUrl = 'http://updates.mindtouch.com/updates.php';

// set the banner status messaging timeline
$wgShowBannerToAdmins = 14; //days
$wgShowBannerToUsers = 4; //days
$wgShowBannerToAnon = 0; //days

$wgGracePeriod = 14; 

$wgRegistrationThreshold = 86400; //seconds

$wgRegistrationHelpTime = 120; //seconds
$wgRegistrationHelpTimeToAdd = 600; //seconds
$wgRedirectToUserPageOnCreate = true; //when users self-register, they get redirected to the home page; this redirects them to their user page

$wgCommentCount = 15; //number of comments to retrieve, setting to 0 will disable comment functionality
$wgLimitCount = 50; //number of revisions to retrieve
$wgSpecialPagesCount = 50; //number of pages to show in popular pages

$wgDefaultRestrictRole = 'Contributor';

/***
 * the API doesn't have a true "all" value - so you need to hardcode a large number
 */
$wgCommentCountAll = 10000;
$wgSearchCount = 35;

/*
 * @note sets the instance name, can be retrieved via X-Deki-Site header
 */
$wgDekiSiteHeader = array();
$wgDekiSiteId = 'default';
// config
$wgInstanceConfig = null;

//emailing users
$wgAllowAnonymousEmailing = false; //true unsupported right now

// see bug #4272 ; this is a list of pages to always load - THIS IS EXPENSIVE and requires todo #4273
$wgPreloadPages = array();

// see bug #4215; this whitelists the skinning variables that templates can write to
$wgTargetSkinVars = array('languages', 'toc');

// WYSIWYG-editor engines list
$wgEditors = array(
    'FCKeditor' => array('directory' => '/fckeditor', 'core' => 'fckeditor.js'),
    'CKEditor'  => array('directory' => '/ckeditor' , 'core' => 'ckeditor.js')
);

// used WYSIYWG-edidor by default
// for override default editor use $wgEditor var in LocalSettings.php
$wgDefaultEditor = 'CKEditor';

$wgFCKFloatingToolbar = true;

// if true then uncompressed version of plugins is used
// else only mindtouchdekiall plugin will be included in FCKeditor
// (this plugin contains minified code of all plugins)
// must be false for release
$wgFCKSource = false;

// Predefined sets: Default, Advanced, Simple, Basic, Everything
$wgFCKToolbarSet = "Default";
$wgFCKToolbarSets = array('Default', 'Basic', 'Simple', 'Advanced', 'Everything'); /* All the possible toolbar sets */

$wgUploaders = array( 'classic', 'flash' );

// because libmagic* seems to have trouble, we will manually detect based on extension
$wgMimeTypes = array(
	//from http://en.wikipedia.org/wiki/Microsoft_Office_2007_file_extensions
	//we don't need to define MS Word, since libmagic seems to think anything related to office is application/msword
	
	//excel
	'xls' => 'application/vnd.xls', 
	'xlsx' => 'application/vnd.xls', 
	'xlsm' => 'application/vnd.xls', 
	'xltx' => 'application/vnd.xls', 
	'xltm' => 'application/vnd.xls', 
	'xlsb' => 'application/vnd.xls', 
	'xlam' => 'application/vnd.xls', 
	
	//powerpoint
	'ppt' => 'application/vnd.ms-powerpoint', 
	'pps' => 'application/vnd.ms-powerpoint', 
	'pptx' => 'application/vnd.ms-powerpoint', 
	'pptm' => 'application/vnd.ms-powerpoint', 
	'potx' => 'application/vnd.ms-powerpoint', 
	'potm' => 'application/vnd.ms-powerpoint', 
	'ppam' => 'application/vnd.ms-powerpoint', 
	'ppsx' => 'application/vnd.ms-powerpoint', 
	'ppsm' => 'application/vnd.ms-powerpoint',
	
	//ms project (bug #4390)
	'mmp' => 'application/vnd.ms-project', 
	'mpd' => 'application/vnd.ms-project', 
	'mpt' => 'application/vnd.ms-project', 
	
	//ms vision (bug #4390)
	'vst' => 'application/vst', 
	'vss' => 'application/vst', 
	'vsd' => 'application/vst', 
	
	//visio
	'vxd' => 'application/vnd.visio',
	'vsd' => 'application/vnd.visio',
	'vsl' => 'application/vnd.visio',
	'vss' => 'application/vnd.visio',
   	'vtx' => 'application/vnd.visio',
   	
   	//todo: see #4282
   	
	//libmagic doesn't like XML vs. HTML
	//don't do ambiguous ones like XHTML; the doctypes should be explicitly declared
	'xml' => 'text/xml', 
	'html' => 'text/html', 
	'htm' => 'text/html', 
	
	//images: see bug #4495
	'gif' => 'image/gif',
	'jpg' => 'image/jpeg',
	'png' => 'image/png'
);

$wgVarnishCache = null;
$wgVarnishMaxage = 18000;

$wgSessionsInMemcached = false;
$wgMemCachedServers = array();

// royk: functions which i think are now stupid after implementing them
$wgEnableSearchHighlight = true;
