<UserControl x:Class="NetflixApp.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d" Height="600" Width="400" xmlns:my="clr-namespace:NetflixApp">
    <UserControl.Resources>
        <my:MainPageViewModel x:Key="ViewModel" />
        <my:CoalesceConverter x:Key="CoalesceConverter" />
        <my:HasValueConverter x:Key="HasValueConverter" />
    </UserControl.Resources>
    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" DataContext="{StaticResource ViewModel}">
        <TextBlock Height="179" HorizontalAlignment="Left" Margin="12,12,0,0" VerticalAlignment="Top" Width="376" TextWrapping="Wrap">
            This sample is a follow-up to the NetflixApp sample that shows how you can easily compose asynchronous APIs while following design patterns such as MVVM (Model/View/ViewModel).<LineBreak />
            <LineBreak />
            NetflixApp.Model performs async network requests to fetch data from Netflix, and then serves this data asynchronously to MainPageViewModel through its own Task-returning API.<LineBreak />Data and progress flow out through multiple layers easily using data-binding, while cancellation flows in using CancellationToken.<LineBreak />
            <LineBreak />
            Be sure to scroll around in the list while it populates!
        </TextBlock>
        <ListBox Margin="12,226,12,41" Name="resultsListBox" ItemsSource="{Binding Path=Movies}">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{Binding BoxArtSmallUrl}" Margin="6" />
                        <HyperlinkButton Content="{Binding Title}" NavigateUri="{Binding Url}" TargetName="_blank" VerticalAlignment="Center" />
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <Button Content="Fetch" Height="23" Margin="0,197,93,0" Name="fetchButton" VerticalAlignment="Top" HorizontalAlignment="Right" Width="75" Command="{Binding Path=Fetch}" />
        <Button Content="Cancel" Height="23" HorizontalAlignment="Right" Margin="0,197,12,0" Name="cancelButton" VerticalAlignment="Top" Width="75" Command="{Binding Path=Cancel}" />
        <TextBox Height="23" Margin="12,197,0,0" Name="queryTextBox" VerticalAlignment="Top" Text="{Binding Path=Query, Mode=TwoWay}" HorizontalAlignment="Left" Width="214" />
        <ProgressBar Height="23" HorizontalAlignment="Left" Margin="12,0,0,12" Name="progressBar" VerticalAlignment="Bottom" Width="138" IsIndeterminate="{Binding Path=Progress, Mode=OneWay, Converter={StaticResource HasValueConverter}, ConverterParameter=False}" Value="{Binding Path=Progress, Mode=OneWay, Converter={StaticResource CoalesceConverter}, ConverterParameter=0}" Maximum="1" />
        <TextBlock Height="23" Margin="156,0,12,12" Name="progressTextBlock" Text="{Binding Path=ProgressText}" VerticalAlignment="Bottom" />
    </Grid>
</UserControl>
